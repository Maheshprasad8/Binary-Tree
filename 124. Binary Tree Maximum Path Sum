A path in a binary tree is a sequence of nodes where each pair of adjacent nodes in the sequence has an edge connecting them. 
A node can only appear in the sequence at most once. Note that the path does not need to pass through the root.

The path sum of a path is the sum of the node's values in the path.

Given the root of a binary tree, return the maximum path sum of any non-empty path.

........................................................................................................................


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
int maxSum=0;
int solve(TreeNode* root){
    if(root==NULL){
        return 0;
    }
    int l=solve(root->left);
    int r=solve(root->right);
     int neeche_milgya=l+r+root->val;  //1
    int koi_ek_achha=max(l,r)+root->val; //2
    int sirf_root=root->val;  //3
   
    maxSum=max({maxSum,koi_ek_achha,sirf_root,neeche_milgya});
    return max(koi_ek_achha,sirf_root);
}
    int maxPathSum(TreeNode* root) {
       maxSum=INT_MIN;
       solve(root);
       return maxSum; 
    }
};
