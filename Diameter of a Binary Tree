Given a binary tree, the diameter (also known as the width) is defined as the number of edges on the longest path 
between two leaf nodes in the tree. This path may or may not pass through the root. Your task is to find the diameter of the tree.


.............................code...................................................

class Solution {
  public:
//   int height(Node* root){
//       if(root==NULL){
//           return 0;
//       }
//       int leftht=height(root->left);
//      int rightht=height(root->right);
//      int ans=max(leftht,rightht)+1;
//      return ans;
//   }
int solve(Node* root,int &res){
    if(root==NULL){
        return 0;
    }
    int left=solve(root->left,res);
    int right=solve(root->right,res);
    res=max(res,left+right);
    return 1+max(left,right);
}
    int diameter(Node* root) {
    //   if(root==NULL){
    //       return 0;
          
    //   }
      int res=0;
      solve(root,res);
      return res;
    //   int op1=diameter(root->left);
    //   int op2=diameter(root->right);
    //   int op3=height(root->left)+height(root->right);
    //   int res=max(op1,max(op2,op3));
    //   return res;
}
};
